!<arch>
0-isupper.c/    0           0     0     644     41        `
int _isupper(int c)
{
	return (0);
}

0-memset.c/     0           0     0     644     68        `
char *_memset(char *s, char b, unsigned int n)
{
	return (s);
}
0-strcat.c/     0           0     0     644     61        `
char *_strcat(char *dest, char *src)
{
	return (dest);
}

100-atoi.c/     0           0     0     644     40        `
int _atoi(char *s)
{
	return (0);
}
1-isdigi.c/     0           0     0     644     41        `
int _isdigit(int c)
{
	return (0);
}

1-memcpy.c/     0           0     0     644     77        `
char *_memcpy(char *dest, char *src, unsigned int n)
{
	return (dest);
}

1-strncat.c/    0           0     0     644     69        `
char *_strncat(char *dest, char *src, int n)
{
	return (dest);
}

2-strchr.c/     0           0     0     644     52        `
char *_strchr(char *s, char c)
{
	return (s);
}
2-strlen.c/     0           0     0     644     42        `
int _strlen(char *s)
{
	return (0);
}
2-strncpy.c/    0           0     0     644     69        `
char *_strncpy(char *dest, char *src, int n)
{
	return (dest);
}

3-islower.c/    0           0     0     644     40        `
int _islower(int c)
{
return (0);
}
3-strcmp.c/     0           0     0     644     53        `
int _strcmp(char *s1, char *s2)
{
	return (0);
}

3-strspn.c/     0           0     0     644     65        `
unsigned int _strspn(char *s, char *accept)
{
	return (0);
}

4-isalpha.c/    0           0     0     644     42        `
int _isalpha(int c)
{
	return (0);
}	
4-strpbrk.c/    0           0     0     644     59        `
char *_strpbrk(char *s, char *accept)
{
	return (s);
}

5-strstr.c/     0           0     0     644     70        `
char *_strstr(char *haystack, char *needle)
{
	return (needle);
}
6-abs.c/        0           0     0     644     37        `
int _abs(int n)
{
	return (0);
}

c/              0           0     0     644     0         `
_putchar.c/     0           0     0     644     256       `


#include <unistd.h>
/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 * Return: On success 1
 *On error, -1 is returned, and errno is set appropriately
 */

int _putchar(char c)
{
	return (write(1, &c, 1));
}

putchar.c/      0           0     0     644     0         `
